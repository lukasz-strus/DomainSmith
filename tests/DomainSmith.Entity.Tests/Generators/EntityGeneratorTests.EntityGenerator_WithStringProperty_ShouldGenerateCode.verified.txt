// <auto-generated/>
using DomainSmith.Entity;
using DomainSmith.Abstraction.Core.Primitives;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Net.Http;
using System.Threading;
using System.Threading.Tasks;
using System.Text.Json;

namespace TestNamespace;

partial class TestEntity : Entity<Guid>
{
    private TestEntity(Guid id, string name) : base(id)
    {
        Name = name;
    }

    public static TestEntity? Create(string name)
    {
        OnCreating(ref name);
    
        var result = new TestEntity(Guid.NewGuid(), name);
        
        OnCreated(result);
        if(!TestNamespace.TestEntityExtensions.CanCreate) return null;
        
        return result;
    }
    
    public void Update(string name)
    {
        OnUpdating(ref name);
        
        var tmpName = Name;
        Name = name;
        
        OnUpdated();
        if(!TestNamespace.TestEntityExtensions.CanUpdate) 
        {
           Name = tmpName;
           return;
        }
    
        return;
    }
    
    static partial void OnCreating(ref string name);
    static partial void OnCreated(TestEntity result);

    partial void OnUpdating(ref string name);
    partial void OnUpdated();
    
    private void AllowUpdate()
    {
        TestNamespace.TestEntityExtensions.CanUpdate = true;
    }
    
    private void AllowCreate()
    {
        TestNamespace.TestEntityExtensions.CanCreate = true;
    }
    
    private void DisallowUpdate()
    {
        TestNamespace.TestEntityExtensions.CanUpdate = false;
    }
    
    private void DisallowCreate()
    {
        TestNamespace.TestEntityExtensions.CanCreate = false;
    }
}

file static class TestEntityExtensions
{
    public static bool CanCreate = true;
    public static bool CanUpdate = true;
}